version: '3.8'

services:
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring-net

  fluentd:
    build: ./fluentd
    container_name: fluentd
    volumes:
      - ./fluentd/fluentd.conf:/fluentd/etc/fluent.conf:ro
      - /var/log:/var/log:ro
      - /var/log/fastapi:/var/log/fastapi
      - fluentd_log:/fluentd/log
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "5140:5140/udp"
      - "9880:9880"
    networks:
      - monitoring-net
    environment:
      - FLUENTD_CONF=fluent.conf
    command: fluentd -c /fluentd/etc/fluent.conf -v
    depends_on:
      - loki
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9880 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: ./backend
    container_name: fastapi
    ports:
      - "8120:8120"
    volumes:
      - /var/log/fastapi:/var/log/fastapi
    command: uvicorn main:app --host 0.0.0.0 --port 8120 --log-level info
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: fastapi.container
        fluentd-async: "true"
        fluentd-sub-second-precision: "true"
    depends_on:
      fluentd:
        condition: service_healthy
    networks:
      - monitoring-net

  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    networks:
      - monitoring-net

  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - '9093:9093'
    depends_on:
      - prometheus
    networks:
      - monitoring-net

  node_exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node_exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - '9100:9100'
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/dashboard.json:/etc/grafana/dashboard.json:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring-net

networks:
  monitoring-net:
    driver: bridge

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_storage:
  fluentd_log:
  loki_data: